name: Regression E2E Tests

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  e2e:
    name: E2E ${{ matrix.browser }} (machine ${{ matrix.machine }})
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox]
        machine: [1, 2]
    env:
      CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      YARN_ENABLE_IMMUTABLE_INSTALLS: "true"
      COREPACK_ENABLE_DOWNLOAD_PROMPT: "0"
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # NÃO usar cache: yarn (ele executa yarn v1 antes do corepack)
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Enable Corepack + Yarn 4
        run: |
          corepack enable
          corepack prepare yarn@4.9.2 --activate
          yarn --version

      # Cache específico para Yarn Berry (após corepack)
      - name: Restore Yarn cache
        uses: actions/cache@v4
        with:
          path: |
            web/.yarn/cache
            web/.pnp.*
          key: yarn-${{ hashFiles('web/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Install dependencies (Yarn 4)
        working-directory: web
        run: yarn install --immutable

      # Se precisar gerar dist (sua app usa serve -s dist):
      # Adicione um build. Exemplo (ajuste conforme tech stack):
      # - name: Build
      #   working-directory: web
      #   run: yarn build

      - name: List files (sanity)
        working-directory: web
        run: ls -1

      - name: Start app
        working-directory: web
        run: |
            if [ ! -d dist ]; then
              echo "::warning::Diretório dist não existe. Verifique se precisa de passo de build."
              mkdir -p dist
              echo "<html><body><h1>Placeholder</h1></body></html>" > dist/index.html
            fi
            npx serve -s dist -p 3000 &
            echo $! > serve.pid

      - name: Wait on app
        working-directory: web
        run: npx wait-on http://localhost:3000 --timeout 120000

      - name: Run Cypress
        uses: cypress-io/github-action@v6
        with:
          working-directory: web
          browser: ${{ matrix.browser }}
          record: true
          parallel: true
          install: false          # evita instalação extra (que chamaria yarn v1)
        env:
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots-${{ matrix.browser }}-${{ matrix.machine }}
          path: web/cypress/screenshots/
          if-no-files-found: ignore

      - name: Upload videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos-${{ matrix.browser }}-${{ matrix.machine }}
          path: web/cypress/videos/
          if-no-files-found: ignore

      - name: Stop app
        if: always()
        working-directory: web
        run: |
          if [ -f serve.pid ]; then kill $(cat serve.pid) || true; fi